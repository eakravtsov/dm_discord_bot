# --- cloudbuild.yaml ---
# This file defines the simple, secure build process. Its only job is to
# authenticate and then trigger the deployment script on the VM.

steps:
  # This single step securely fetches the SSH key from Secret Manager,
  # sets the correct permissions, adds GitHub to the list of known hosts,
  # and then executes the 'setup_and_run.sh' script on the target VM.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Connect and Deploy'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create a directory for the SSH key within the step's temporary filesystem
        mkdir -p /root/.ssh
        
        # Fetch the SSH private key from Secret Manager
        gcloud secrets versions access latest --secret="github-ssh-private-key" --format="get(payload.data)" | tr "_-" "/+" | base64 -d > /root/.ssh/id_ed25519
        
        # Set required key permissions for SSH
        chmod 600 /root/.ssh/id_ed25519
        
        # Add GitHub to known_hosts to prevent interactive prompts, which break automation
        ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
        
        # SSH into the VM and execute the deployment script
        # IMPORTANT: Replace 'your-vm-name' and 'your-vm-zone' with your VM's details
        gcloud compute ssh discord-bot-vm --zone=us-central1-c -- 'sudo /opt/apps/discord-bot/setup_and_run.sh'

# Allow the build to access the specified secret from Secret Manager.
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/github-ssh-private-key/versions/latest
    env: 'SSH_KEY' # This env var is required by the syntax but not used directly in our script.

options:
  logging: CLOUD_LOGGING_ONLY